{"version":3,"sources":["components/Header.jsx","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","response","data","id","delete","config","headers","post","Provider","value","deleteTransaction","addTransaction","getTransactions","numberWithCommas","number","toString","replace","Balance","total","useContext","map","amount","reduce","accumulator","toFixed","Fragment","IncomeExpenses","amounts","income","item","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1826359.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return ( \r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n     );\r\n}","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            };\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            };\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [ ...state.transactions, action.payload ]\r\n            };\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n};\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [ state, dispatch ] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    async function getTransactions() {\r\n        try {\r\n            const response = await axios.get('https://benion-expense-tracker-mern.herokuapp.com/api/transactions-route');\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: response.data.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`https://benion-expense-tracker-mern.herokuapp.com/api/transactions-route/${ id }`);\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        try {\r\n            const response = await axios.post('https://benion-expense-tracker-mern.herokuapp.com/api/transactions-route', transaction, config);\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: response.data.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            loading: state.loading,\r\n            error: state.error,\r\n            deleteTransaction,\r\n            addTransaction,\r\n            getTransactions\r\n        }}>\r\n            { children }\r\n        </GlobalContext.Provider>\r\n    );\r\n};","export function numberWithCommas(number) {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((accumulator, amount) => (accumulator += amount), 0).toFixed(2);\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <h4>Your Balance</h4>\r\n            <h1>${ numberWithCommas(total) }</h1>\r\n        </React.Fragment>\r\n     );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const IncomeExpenses = () => {\r\n\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((accumulator, amount) => (accumulator += amount), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts\r\n      .filter(item => item < 0)\r\n      .reduce((accumulator, amount) => (accumulator += amount), 0) * -1\r\n    ).toFixed(2);\r\n \r\n    return ( \r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">${ numberWithCommas(income) }</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">${ numberWithCommas(expense) }</p>\r\n        </div>\r\n      </div>\r\n     );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return ( \r\n        <li className={ transaction.amount < 0 ? 'minus' : 'plus' }>\r\n            { transaction.text} <span>{ sign }${ numberWithCommas(Math.abs(transaction.amount)) }</span><button onClick={ () => deleteTransaction(transaction._id) } className=\"delete-btn\">x</button>\r\n        </li>\r\n     );\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n    useEffect(() => {\r\n        getTransactions();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                { transactions.map(transaction => (\r\n                    <Transaction key={ transaction.id } transaction={ transaction } />\r\n                )) }\r\n            </ul>\r\n        </React.Fragment>\r\n     );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [ text, setText ] = useState('');\r\n    const [ amount, setAmount ] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const submit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        };\r\n\r\n        addTransaction(newTransaction);\r\n    };\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={ submit }>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={ text } onChange={ (event) => setText(event.target.value) } placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                        >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={ amount } onChange={ (event) => setAmount(event.target.value) } placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </React.Fragment>\r\n     );\r\n}","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header /> \n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}